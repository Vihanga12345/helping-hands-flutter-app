-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.admin_audit_log (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  admin_user_id uuid NOT NULL,
  action_type character varying NOT NULL,
  entity_type character varying NOT NULL,
  entity_id uuid,
  entity_name character varying,
  action_details jsonb,
  old_values jsonb,
  new_values jsonb,
  ip_address inet,
  user_agent text,
  session_id uuid,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT admin_audit_log_pkey PRIMARY KEY (id),
  CONSTRAINT admin_audit_log_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.admin_sessions(id),
  CONSTRAINT admin_audit_log_admin_user_id_fkey FOREIGN KEY (admin_user_id) REFERENCES public.admin_users(id)
);
CREATE TABLE public.admin_sessions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  admin_user_id uuid NOT NULL,
  session_token character varying NOT NULL UNIQUE,
  ip_address inet,
  user_agent text,
  expires_at timestamp without time zone NOT NULL,
  is_active boolean DEFAULT true,
  last_activity timestamp without time zone DEFAULT now(),
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT admin_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT admin_sessions_admin_user_id_fkey FOREIGN KEY (admin_user_id) REFERENCES public.admin_users(id)
);
CREATE TABLE public.admin_users (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  username character varying NOT NULL UNIQUE,
  password_hash character varying NOT NULL,
  full_name character varying NOT NULL,
  email character varying NOT NULL UNIQUE,
  is_active boolean DEFAULT true,
  failed_login_attempts integer DEFAULT 0,
  account_locked_until timestamp without time zone,
  last_login timestamp without time zone,
  last_login_ip inet,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT admin_users_pkey PRIMARY KEY (id)
);
CREATE TABLE public.call_logs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  job_id uuid NOT NULL,
  caller_id uuid NOT NULL,
  receiver_id uuid NOT NULL,
  call_duration integer DEFAULT 0,
  call_status character varying,
  call_type character varying DEFAULT 'webrtc'::character varying,
  started_at timestamp with time zone DEFAULT now(),
  ended_at timestamp with time zone,
  CONSTRAINT call_logs_pkey PRIMARY KEY (id),
  CONSTRAINT call_logs_caller_id_fkey FOREIGN KEY (caller_id) REFERENCES public.users(id),
  CONSTRAINT call_logs_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id),
  CONSTRAINT call_logs_receiver_id_fkey FOREIGN KEY (receiver_id) REFERENCES public.users(id)
);
CREATE TABLE public.conversations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  job_id uuid NOT NULL UNIQUE,
  helpee_id uuid NOT NULL,
  helper_id uuid NOT NULL,
  last_message_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT conversations_pkey PRIMARY KEY (id),
  CONSTRAINT conversations_helpee_id_fkey FOREIGN KEY (helpee_id) REFERENCES public.users(id),
  CONSTRAINT conversations_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id),
  CONSTRAINT conversations_helper_id_fkey FOREIGN KEY (helper_id) REFERENCES public.users(id)
);
CREATE TABLE public.emergency_contacts (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  contact_name character varying NOT NULL,
  contact_phone character varying NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT emergency_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT emergency_contacts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.general_reports (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  reporter_id uuid,
  report_type character varying NOT NULL,
  subject character varying NOT NULL,
  description text NOT NULL,
  priority character varying DEFAULT 'medium'::character varying,
  status character varying DEFAULT 'open'::character varying,
  admin_response text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT general_reports_pkey PRIMARY KEY (id),
  CONSTRAINT general_reports_reporter_id_fkey FOREIGN KEY (reporter_id) REFERENCES public.users(id)
);
CREATE TABLE public.helper_documents (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  helper_id uuid NOT NULL,
  document_type character varying NOT NULL,
  document_name character varying NOT NULL,
  document_url text,
  file_size_bytes bigint DEFAULT 0,
  file_type character varying,
  job_category_id uuid,
  verification_status character varying DEFAULT 'pending'::character varying,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT helper_documents_pkey PRIMARY KEY (id),
  CONSTRAINT helper_documents_helper_id_fkey FOREIGN KEY (helper_id) REFERENCES public.users(id),
  CONSTRAINT helper_documents_job_category_id_fkey FOREIGN KEY (job_category_id) REFERENCES public.job_categories(id)
);
CREATE TABLE public.helper_earnings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  helper_id uuid NOT NULL,
  job_id uuid NOT NULL,
  amount_earned numeric NOT NULL,
  hours_worked numeric DEFAULT 0,
  platform_fee numeric DEFAULT 0,
  net_earnings numeric NOT NULL,
  payment_status character varying DEFAULT 'pending'::character varying,
  payment_date timestamp without time zone,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT helper_earnings_pkey PRIMARY KEY (id),
  CONSTRAINT helper_earnings_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id),
  CONSTRAINT helper_earnings_helper_id_fkey FOREIGN KEY (helper_id) REFERENCES public.users(id)
);
CREATE TABLE public.helper_job_types (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  helper_id uuid NOT NULL,
  job_category_id uuid NOT NULL,
  is_active boolean DEFAULT true,
  hourly_rate numeric DEFAULT 2000.00,
  experience_level character varying DEFAULT 'beginner'::character varying,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT helper_job_types_pkey PRIMARY KEY (id),
  CONSTRAINT helper_job_types_helper_id_fkey FOREIGN KEY (helper_id) REFERENCES public.users(id),
  CONSTRAINT helper_job_types_job_category_id_fkey FOREIGN KEY (job_category_id) REFERENCES public.job_categories(id)
);
CREATE TABLE public.helper_skills (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  helper_id uuid NOT NULL,
  skill_category character varying NOT NULL,
  skill_name character varying NOT NULL,
  experience_years integer DEFAULT 0 CHECK (experience_years >= 0),
  hourly_rate numeric CHECK (hourly_rate >= 0::numeric),
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT helper_skills_pkey PRIMARY KEY (id),
  CONSTRAINT helper_skills_helper_id_fkey FOREIGN KEY (helper_id) REFERENCES public.users(id)
);
CREATE TABLE public.job_applications (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  job_id uuid NOT NULL,
  helper_id uuid NOT NULL,
  application_message text,
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'accepted'::character varying, 'rejected'::character varying, 'withdrawn'::character varying]::text[])),
  applied_at timestamp with time zone DEFAULT now(),
  responded_at timestamp with time zone,
  CONSTRAINT job_applications_pkey PRIMARY KEY (id),
  CONSTRAINT job_applications_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id),
  CONSTRAINT job_applications_helper_id_fkey FOREIGN KEY (helper_id) REFERENCES public.users(id)
);
CREATE TABLE public.job_attachments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  job_id uuid NOT NULL,
  file_name character varying NOT NULL,
  file_url text NOT NULL,
  file_type character varying NOT NULL,
  file_size integer,
  uploaded_by uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT job_attachments_pkey PRIMARY KEY (id),
  CONSTRAINT job_attachments_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id),
  CONSTRAINT job_attachments_uploaded_by_fkey FOREIGN KEY (uploaded_by) REFERENCES public.users(id)
);
CREATE TABLE public.job_categories (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL UNIQUE,
  description text,
  icon_name character varying,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  default_hourly_rate numeric,
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT job_categories_pkey PRIMARY KEY (id)
);
CREATE TABLE public.job_category_questions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  category_id uuid NOT NULL,
  question_text text NOT NULL,
  question_type character varying NOT NULL CHECK (question_type::text = ANY (ARRAY['text'::character varying, 'multiple_choice'::character varying, 'checkbox'::character varying, 'number'::character varying, 'date'::character varying, 'time'::character varying]::text[])),
  question_order integer NOT NULL,
  is_required boolean DEFAULT true,
  options jsonb,
  placeholder_text character varying,
  validation_rules jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  question text,
  order_index integer DEFAULT 0,
  is_active boolean DEFAULT true,
  CONSTRAINT job_category_questions_pkey PRIMARY KEY (id),
  CONSTRAINT job_category_questions_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.job_categories(id)
);
CREATE TABLE public.job_ignores (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  job_id uuid NOT NULL,
  helper_id uuid NOT NULL,
  ignored_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT job_ignores_pkey PRIMARY KEY (id),
  CONSTRAINT job_ignores_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id),
  CONSTRAINT job_ignores_helper_id_fkey FOREIGN KEY (helper_id) REFERENCES public.users(id)
);
CREATE TABLE public.job_question_answers (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  job_id uuid NOT NULL,
  question_id uuid NOT NULL,
  answer text,
  selected_options jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  answer_number numeric,
  answer_date date,
  answer_time time without time zone,
  answer_boolean boolean,
  answer_text text,
  CONSTRAINT job_question_answers_pkey PRIMARY KEY (id),
  CONSTRAINT job_question_answers_question_id_fkey FOREIGN KEY (question_id) REFERENCES public.job_category_questions(id),
  CONSTRAINT job_question_answers_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id)
);
CREATE TABLE public.job_reports (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  job_id uuid NOT NULL,
  reporter_id uuid NOT NULL,
  reported_user_id uuid NOT NULL,
  report_type character varying NOT NULL,
  report_description text NOT NULL,
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'investigating'::character varying, 'resolved'::character varying, 'dismissed'::character varying]::text[])),
  admin_notes text,
  handled_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  resolved_at timestamp with time zone,
  updated_at timestamp without time zone DEFAULT now(),
  report_category character varying,
  priority_level character varying DEFAULT 'medium'::character varying,
  admin_response text,
  resolution_details text,
  CONSTRAINT job_reports_pkey PRIMARY KEY (id),
  CONSTRAINT job_reports_reporter_id_fkey FOREIGN KEY (reporter_id) REFERENCES public.users(id),
  CONSTRAINT job_reports_handled_by_fkey FOREIGN KEY (handled_by) REFERENCES public.users(id),
  CONSTRAINT job_reports_reported_user_id_fkey FOREIGN KEY (reported_user_id) REFERENCES public.users(id),
  CONSTRAINT job_reports_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id)
);
CREATE TABLE public.job_timer_sessions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  job_id uuid NOT NULL,
  helper_id uuid NOT NULL,
  session_start_time timestamp with time zone NOT NULL,
  session_end_time timestamp with time zone,
  duration_minutes integer,
  session_type character varying DEFAULT 'work'::character varying CHECK (session_type::text = ANY (ARRAY['work'::character varying, 'break'::character varying]::text[])),
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT job_timer_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT job_timer_sessions_helper_id_fkey FOREIGN KEY (helper_id) REFERENCES public.users(id),
  CONSTRAINT job_timer_sessions_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id)
);
CREATE TABLE public.job_timers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  job_id uuid NOT NULL UNIQUE,
  helper_id uuid NOT NULL,
  helpee_id uuid NOT NULL,
  status character varying NOT NULL DEFAULT 'not_started'::character varying CHECK (status::text = ANY (ARRAY['not_started'::character varying, 'running'::character varying, 'paused'::character varying, 'completed'::character varying]::text[])),
  start_time timestamp with time zone,
  end_time timestamp with time zone,
  pause_start_time timestamp with time zone,
  total_paused_duration interval DEFAULT '00:00:00'::interval,
  total_duration interval DEFAULT '00:00:00'::interval,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT job_timers_pkey PRIMARY KEY (id),
  CONSTRAINT job_timers_helper_id_fkey FOREIGN KEY (helper_id) REFERENCES public.users(id),
  CONSTRAINT job_timers_helpee_id_fkey FOREIGN KEY (helpee_id) REFERENCES public.users(id),
  CONSTRAINT job_timers_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id)
);
CREATE TABLE public.jobs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  helpee_id uuid NOT NULL,
  assigned_helper_id uuid,
  category_id uuid NOT NULL,
  title character varying NOT NULL,
  description text NOT NULL,
  special_instructions text,
  job_type character varying NOT NULL CHECK (job_type::text = ANY (ARRAY['private'::character varying, 'public'::character varying]::text[])),
  status character varying NOT NULL DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'accepted'::character varying, 'started'::character varying, 'in_progress'::character varying, 'paused'::character varying, 'completed'::character varying, 'cancelled'::character varying, 'rejected'::character varying]::text[])),
  hourly_rate numeric NOT NULL,
  estimated_hours numeric,
  total_amount numeric,
  scheduled_date date NOT NULL,
  scheduled_start_time time without time zone NOT NULL,
  scheduled_end_time time without time zone,
  actual_start_time timestamp with time zone,
  actual_end_time timestamp with time zone,
  total_work_time_minutes integer DEFAULT 0,
  timer_start_time timestamp with time zone,
  timer_paused_time timestamp with time zone,
  is_timer_running boolean DEFAULT false,
  location_latitude numeric NOT NULL,
  location_longitude numeric NOT NULL,
  location_address text NOT NULL,
  location_type character varying,
  payment_method character varying DEFAULT 'cash'::character varying CHECK (payment_method::text = ANY (ARRAY['cash'::character varying, 'card'::character varying, 'bank_transfer'::character varying]::text[])),
  payment_status character varying DEFAULT 'pending'::character varying CHECK (payment_status::text = ANY (ARRAY['pending'::character varying, 'paid'::character varying, 'refunded'::character varying]::text[])),
  requires_own_supplies boolean DEFAULT false,
  pet_friendly_required boolean DEFAULT false,
  invited_helper_email character varying,
  price_calculated numeric,
  payment_requested_at timestamp with time zone,
  is_rated_by_helpee boolean DEFAULT false,
  is_rated_by_helper boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  helpee_username character varying,
  helpee_display_name character varying,
  helper_username character varying,
  helper_display_name character varying,
  helpee_rating integer CHECK (helpee_rating >= 1 AND helpee_rating <= 5),
  helper_rating integer CHECK (helper_rating >= 1 AND helper_rating <= 5),
  helpee_review text,
  helper_review text,
  scheduled_time time without time zone,
  is_private boolean DEFAULT false,
  started_at timestamp without time zone,
  paused_at timestamp without time zone,
  resumed_at timestamp without time zone,
  cancelled_at timestamp without time zone,
  assigned_at timestamp without time zone,
  cancellation_reason text,
  notes text,
  completed_at timestamp with time zone,
  total_elapsed_seconds integer DEFAULT 0,
  timer_status character varying DEFAULT 'not_started'::character varying CHECK (timer_status::text = ANY (ARRAY['not_started'::character varying, 'running'::character varying, 'paused'::character varying, 'completed'::character varying]::text[])),
  session_start_time timestamp without time zone,
  session_pause_time timestamp without time zone,
  session_events jsonb DEFAULT '[]'::jsonb,
  cumulative_time_seconds integer DEFAULT 0,
  helper_profile_image_url text,
  helper_job_count integer DEFAULT 0,
  helper_first_name character varying,
  helper_last_name character varying,
  helper_phone character varying,
  job_category_name character varying,
  payment_amount_calculated numeric,
  helpee_payment_confirmed boolean DEFAULT false,
  helper_payment_received boolean DEFAULT false,
  payment_confirmed_at timestamp without time zone,
  payment_dispute_reported boolean DEFAULT false,
  final_amount numeric,
  estimated_amount numeric,
  CONSTRAINT jobs_pkey PRIMARY KEY (id),
  CONSTRAINT jobs_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.job_categories(id),
  CONSTRAINT jobs_assigned_helper_id_fkey FOREIGN KEY (assigned_helper_id) REFERENCES public.users(id),
  CONSTRAINT jobs_helpee_id_fkey FOREIGN KEY (helpee_id) REFERENCES public.users(id)
);
CREATE TABLE public.messages (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  conversation_id uuid NOT NULL,
  sender_id uuid NOT NULL,
  message_text text NOT NULL,
  message_type character varying DEFAULT 'text'::character varying,
  is_read boolean DEFAULT false,
  sent_at timestamp with time zone DEFAULT now(),
  CONSTRAINT messages_pkey PRIMARY KEY (id),
  CONSTRAINT messages_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.users(id),
  CONSTRAINT messages_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.conversations(id)
);
CREATE TABLE public.notification_history (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  notification_id uuid,
  title character varying NOT NULL,
  body text NOT NULL,
  notification_type character varying NOT NULL,
  delivery_status character varying DEFAULT 'pending'::character varying,
  firebase_message_id character varying,
  opened_at timestamp without time zone,
  sent_at timestamp without time zone DEFAULT now(),
  error_message text,
  device_type character varying,
  app_version character varying,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT notification_history_pkey PRIMARY KEY (id),
  CONSTRAINT notification_history_notification_id_fkey FOREIGN KEY (notification_id) REFERENCES public.notifications(id),
  CONSTRAINT notification_history_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.notification_templates (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  template_key character varying NOT NULL UNIQUE,
  title_en character varying NOT NULL,
  body_en text NOT NULL,
  title_si character varying,
  body_si text,
  title_ta character varying,
  body_ta text,
  notification_type character varying NOT NULL,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT notification_templates_pkey PRIMARY KEY (id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  title character varying NOT NULL,
  message text NOT NULL,
  notification_type character varying NOT NULL DEFAULT 'general'::character varying,
  related_job_id uuid,
  related_user_id uuid,
  is_read boolean DEFAULT false,
  action_url text,
  created_at timestamp with time zone DEFAULT now(),
  read_at timestamp with time zone,
  notification_category character varying DEFAULT 'general'::character varying,
  is_push_sent boolean DEFAULT false,
  firebase_message_id character varying,
  scheduled_for timestamp without time zone,
  priority_level character varying DEFAULT 'normal'::character varying,
  entity_id uuid,
  entity_type character varying,
  job_id uuid,
  notification_data jsonb,
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT notifications_related_job_id_fkey FOREIGN KEY (related_job_id) REFERENCES public.jobs(id),
  CONSTRAINT notifications_related_user_id_fkey FOREIGN KEY (related_user_id) REFERENCES public.users(id)
);
CREATE TABLE public.payment_confirmations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  job_id uuid NOT NULL,
  user_id uuid NOT NULL,
  confirmation_type character varying NOT NULL CHECK (confirmation_type::text = ANY (ARRAY['payment_made'::character varying, 'payment_received'::character varying, 'dispute_reported'::character varying]::text[])),
  amount numeric NOT NULL,
  payment_method character varying DEFAULT 'cash'::character varying,
  confirmed_at timestamp without time zone DEFAULT now(),
  notes text,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT payment_confirmations_pkey PRIMARY KEY (id),
  CONSTRAINT payment_confirmations_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id),
  CONSTRAINT payment_confirmations_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.payment_disputes (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  job_id uuid NOT NULL,
  reporter_id uuid NOT NULL,
  dispute_type character varying NOT NULL,
  dispute_description text NOT NULL,
  amount_disputed numeric,
  status character varying DEFAULT 'open'::character varying CHECK (status::text = ANY (ARRAY['open'::character varying, 'investigating'::character varying, 'resolved'::character varying, 'closed'::character varying]::text[])),
  admin_notes text,
  resolution_details text,
  created_at timestamp without time zone DEFAULT now(),
  resolved_at timestamp without time zone,
  CONSTRAINT payment_disputes_pkey PRIMARY KEY (id),
  CONSTRAINT payment_disputes_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id),
  CONSTRAINT payment_disputes_reporter_id_fkey FOREIGN KEY (reporter_id) REFERENCES public.users(id)
);
CREATE TABLE public.payment_methods (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  method_type character varying NOT NULL CHECK (method_type::text = ANY (ARRAY['cash'::character varying, 'card'::character varying]::text[])),
  is_default boolean DEFAULT false,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT payment_methods_pkey PRIMARY KEY (id),
  CONSTRAINT payment_methods_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.payments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  job_id uuid NOT NULL,
  payer_id uuid NOT NULL,
  payee_id uuid NOT NULL,
  amount numeric NOT NULL,
  payment_method character varying NOT NULL,
  payment_status character varying DEFAULT 'pending'::character varying CHECK (payment_status::text = ANY (ARRAY['pending'::character varying, 'processing'::character varying, 'completed'::character varying, 'failed'::character varying, 'refunded'::character varying]::text[])),
  transaction_reference character varying,
  platform_fee numeric DEFAULT 0.00,
  helper_earnings numeric,
  created_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  CONSTRAINT payments_pkey PRIMARY KEY (id),
  CONSTRAINT payments_payer_id_fkey FOREIGN KEY (payer_id) REFERENCES public.users(id),
  CONSTRAINT payments_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id),
  CONSTRAINT payments_payee_id_fkey FOREIGN KEY (payee_id) REFERENCES public.users(id)
);
CREATE TABLE public.ratings_reviews (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  job_id uuid NOT NULL,
  reviewer_id uuid NOT NULL,
  reviewee_id uuid NOT NULL,
  rating integer NOT NULL CHECK (rating >= 1 AND rating <= 5),
  review_text text,
  review_type character varying NOT NULL CHECK (review_type::text = ANY (ARRAY['helper_to_helpee'::character varying, 'helpee_to_helper'::character varying]::text[])),
  created_at timestamp with time zone DEFAULT now(),
  helper_id uuid,
  CONSTRAINT ratings_reviews_pkey PRIMARY KEY (id),
  CONSTRAINT ratings_reviews_reviewer_id_fkey FOREIGN KEY (reviewer_id) REFERENCES public.users(id),
  CONSTRAINT ratings_reviews_reviewee_id_fkey FOREIGN KEY (reviewee_id) REFERENCES public.users(id),
  CONSTRAINT ratings_reviews_helper_id_fkey FOREIGN KEY (helper_id) REFERENCES public.users(id),
  CONSTRAINT ratings_reviews_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id)
);
CREATE TABLE public.route_permissions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  route_pattern character varying NOT NULL UNIQUE,
  allowed_user_types ARRAY NOT NULL,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT route_permissions_pkey PRIMARY KEY (id)
);
CREATE TABLE public.security_audit_log (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  session_token character varying,
  event_type character varying NOT NULL,
  attempted_route character varying,
  expected_user_type character varying,
  actual_user_type character varying,
  ip_address inet,
  user_agent text,
  event_details jsonb,
  severity character varying DEFAULT 'medium'::character varying CHECK (severity::text = ANY (ARRAY['low'::character varying, 'medium'::character varying, 'high'::character varying, 'critical'::character varying]::text[])),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT security_audit_log_pkey PRIMARY KEY (id),
  CONSTRAINT security_audit_log_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.system_analytics (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  metric_name character varying NOT NULL,
  metric_value numeric NOT NULL,
  metric_date date NOT NULL,
  additional_data jsonb,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT system_analytics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_authentication (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  username character varying NOT NULL UNIQUE,
  email character varying NOT NULL UNIQUE,
  password_hash character varying NOT NULL,
  user_type character varying NOT NULL CHECK (user_type::text = ANY (ARRAY['helper'::character varying, 'helpee'::character varying]::text[])),
  user_id uuid NOT NULL,
  is_email_verified boolean DEFAULT false,
  email_verification_token character varying,
  password_reset_token character varying,
  password_reset_expires timestamp with time zone,
  last_login timestamp with time zone,
  login_attempts integer DEFAULT 0,
  account_locked_until timestamp with time zone,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_authentication_pkey PRIMARY KEY (id),
  CONSTRAINT user_authentication_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.user_availability (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  day_of_week integer NOT NULL CHECK (day_of_week >= 0 AND day_of_week <= 6),
  start_time time without time zone NOT NULL,
  end_time time without time zone NOT NULL,
  is_available boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_availability_pkey PRIMARY KEY (id),
  CONSTRAINT user_availability_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.user_cards (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  card_holder_name character varying NOT NULL,
  card_number_last_four character varying NOT NULL,
  card_number_encrypted text,
  expiry_month integer NOT NULL CHECK (expiry_month >= 1 AND expiry_month <= 12),
  expiry_year integer NOT NULL CHECK (expiry_year >= 2024),
  card_type character varying DEFAULT 'Unknown'::character varying,
  is_default boolean DEFAULT false,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT user_cards_pkey PRIMARY KEY (id),
  CONSTRAINT user_cards_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.user_documents (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  document_type character varying NOT NULL,
  document_name character varying NOT NULL,
  file_url text NOT NULL,
  file_size integer,
  verification_status character varying DEFAULT 'pending'::character varying CHECK (verification_status::text = ANY (ARRAY['pending'::character varying, 'verified'::character varying, 'rejected'::character varying]::text[])),
  verified_by uuid,
  verified_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_documents_pkey PRIMARY KEY (id),
  CONSTRAINT user_documents_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT user_documents_verified_by_fkey FOREIGN KEY (verified_by) REFERENCES public.users(id)
);
CREATE TABLE public.user_notification_preferences (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL UNIQUE,
  job_requests boolean DEFAULT true,
  job_updates boolean DEFAULT true,
  job_completions boolean DEFAULT true,
  payment_reminders boolean DEFAULT true,
  rating_reminders boolean DEFAULT true,
  system_updates boolean DEFAULT true,
  marketing_notifications boolean DEFAULT false,
  push_notifications boolean DEFAULT true,
  email_notifications boolean DEFAULT true,
  sms_notifications boolean DEFAULT false,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT user_notification_preferences_pkey PRIMARY KEY (id),
  CONSTRAINT user_notification_preferences_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.user_reports (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  reporter_id uuid NOT NULL,
  reported_user_id uuid NOT NULL,
  report_type character varying NOT NULL,
  report_description text NOT NULL,
  evidence_urls ARRAY,
  status character varying DEFAULT 'pending'::character varying,
  admin_notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_reports_pkey PRIMARY KEY (id),
  CONSTRAINT user_reports_reported_user_id_fkey FOREIGN KEY (reported_user_id) REFERENCES public.users(id),
  CONSTRAINT user_reports_reporter_id_fkey FOREIGN KEY (reporter_id) REFERENCES public.users(id)
);
CREATE TABLE public.user_sessions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_auth_id uuid NOT NULL,
  session_token character varying NOT NULL UNIQUE,
  device_info text,
  ip_address inet,
  user_agent text,
  expires_at timestamp with time zone NOT NULL,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  last_activity timestamp with time zone DEFAULT now(),
  user_type character varying CHECK (user_type::text = ANY (ARRAY['helper'::character varying, 'helpee'::character varying, 'admin'::character varying]::text[])),
  last_activity_at timestamp with time zone DEFAULT now(),
  user_id uuid,
  CONSTRAINT user_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT user_sessions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT user_sessions_user_auth_id_fkey FOREIGN KEY (user_auth_id) REFERENCES public.user_authentication(id)
);
CREATE TABLE public.user_skills (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  category_id uuid NOT NULL,
  experience_years integer DEFAULT 0,
  skill_level character varying DEFAULT 'beginner'::character varying CHECK (skill_level::text = ANY (ARRAY['beginner'::character varying, 'intermediate'::character varying, 'advanced'::character varying, 'expert'::character varying]::text[])),
  hourly_rate numeric,
  is_available boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_skills_pkey PRIMARY KEY (id),
  CONSTRAINT user_skills_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT user_skills_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.job_categories(id)
);
CREATE TABLE public.user_type_switching_log (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  from_user_type character varying,
  to_user_type character varying NOT NULL,
  switch_reason character varying,
  ip_address inet,
  requires_reauth boolean DEFAULT true,
  approved_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_type_switching_log_pkey PRIMARY KEY (id),
  CONSTRAINT user_type_switching_log_approved_by_fkey FOREIGN KEY (approved_by) REFERENCES public.users(id),
  CONSTRAINT user_type_switching_log_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  email character varying NOT NULL UNIQUE,
  phone character varying NOT NULL UNIQUE,
  first_name character varying NOT NULL,
  last_name character varying NOT NULL,
  date_of_birth date,
  gender character varying CHECK (gender::text = ANY (ARRAY['male'::character varying, 'female'::character varying, 'other'::character varying, 'prefer_not_to_say'::character varying]::text[])),
  profile_image_url text,
  user_type character varying NOT NULL CHECK (user_type::text = ANY (ARRAY['helper'::character varying, 'helpee'::character varying, 'admin'::character varying]::text[])),
  about_me text,
  is_verified boolean DEFAULT false,
  is_active boolean DEFAULT true,
  location_latitude numeric,
  location_longitude numeric,
  location_address text,
  location_city character varying,
  location_district character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  username character varying UNIQUE,
  display_name character varying,
  emergency_contact_name character varying,
  emergency_contact_phone character varying,
  preferred_language character varying DEFAULT 'English'::character varying,
  preferred_currency character varying DEFAULT 'LKR'::character varying,
  notifications_enabled boolean DEFAULT true,
  profile_completion_percentage integer DEFAULT 0,
  hourly_rate_default numeric DEFAULT 2000.00,
  availability_status character varying DEFAULT 'available'::character varying,
  verification_status character varying DEFAULT 'pending'::character varying,
  fcm_token character varying,
  notification_enabled boolean DEFAULT true,
  last_fcm_update timestamp without time zone DEFAULT now(),
  bio text,
  profile_picture_url text,
  CONSTRAINT users_pkey PRIMARY KEY (id)
);